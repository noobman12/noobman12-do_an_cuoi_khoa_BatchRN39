import createError from "http-errors";
// K·∫øt n·ªëi tr·ª±c ti·∫øp v·ªõi Database
import Category from "../models/category.model"; 
import { ObjectId } from "mongoose";
import {ICategory} from "../types/models"

// L·∫•y t·∫•t c·∫£ record
const findAll = async () => {
    /**
     * SELECT * FROM brands
     */
    const category = await Category.find();
    //console.log('<<=== üöÄ brands ===>>',brands);
    return category;
  };
  
  // T√¨m 1 record theo ID
  const findById = async (id: string) => {
    //ƒêi t√¨m 1 c√°i kh·ªõp id
    /**
     * SELECT * FROM brands WHERE id = ''
     */
    const category = await Category.findById(id);
  
    /* B·∫Øt l·ªói khi ko t√¨m th·∫•y th√¥ng tin */
    if (!category) {
      throw createError(400, "Category Not Found");
    }
  
    return category;
  };
  
  const createRecord = async (payload: ICategory) => {
    console.log("<<=== üöÄ payload ===>>", payload);
  
    const category = await Category.create(payload);
  
    console.log("<<=== üöÄ create Category ===>>", category);
  
    //Tr·∫£ l·∫°i record v·ª´a th√™m m·ªõi
    return category;
  };
  
  const updateById = async (id: string, payload: ICategory) => {
    //b1.Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa danh m·ª•c c√≥ id n√†y
    const category = await Category.findByIdAndUpdate(id, payload, {
      new: true, // n√≥ tr·∫£ v·ªÅ record sau khi update
    });
    console.log("<<=== üöÄ category ===>>", category);
  
    /* B·∫Øt l·ªói khi ko t√¨m th·∫•y th√¥ng tin */
    if (!category) {
      throw createError(400, "Category Not Found");
    }
  
    //Return v·ªÅ record v·ª´a ƒëc update
    return category;
  };
  
  const deleteById = async (id: string) => {
    //b1 Ki·ªÉm tra xem t·ªìn t·∫°i author c√≥ id
    const category = await Category.findByIdAndDelete(id);
  
    if (!category) {
      throw createError(400, "Category Not Found");
    }
  
    //Return v·ªÅ record v·ª´a x√≥a
    return category;
  };
  
  export default {
    findAll,
    findById,
    createRecord,
    updateById,
    deleteById,
  };
 